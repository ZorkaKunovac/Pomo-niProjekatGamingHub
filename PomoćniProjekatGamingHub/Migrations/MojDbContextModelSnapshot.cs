// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PomoćniProjekatGamingHub.EF;

namespace PomoćniProjekatGamingHub.Migrations
{
    [DbContext(typeof(MojDbContext))]
    partial class MojDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PomoćniProjekatGamingHub.EntityModels.Igra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumIzlaska")
                        .HasColumnType("datetime2");

                    b.Property<string>("Developer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Izdavac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProizvodID")
                        .HasColumnType("int");

                    b.Property<string>("SlikaLink")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("VideoLink")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("ProizvodID");

                    b.ToTable("Igra");
                });

            modelBuilder.Entity("PomoćniProjekatGamingHub.EntityModels.IgraKonzola", b =>
                {
                    b.Property<int>("IgraID")
                        .HasColumnType("int");

                    b.Property<int>("KonzolaID")
                        .HasColumnType("int");

                    b.HasKey("IgraID", "KonzolaID");

                    b.HasIndex("KonzolaID");

                    b.ToTable("IgraKonzola");
                });

            modelBuilder.Entity("PomoćniProjekatGamingHub.EntityModels.IgraZarn", b =>
                {
                    b.Property<int>("IgraID")
                        .HasColumnType("int");

                    b.Property<int>("ZarnID")
                        .HasColumnType("int");

                    b.HasKey("IgraID", "ZarnID");

                    b.HasIndex("ZarnID");

                    b.ToTable("IgraZarn");
                });

            modelBuilder.Entity("PomoćniProjekatGamingHub.EntityModels.Konzola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detalji")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kapacitet")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Proizvodjac")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Konzola");
                });

            modelBuilder.Entity("PomoćniProjekatGamingHub.EntityModels.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Lozinka")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Spol")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("TipKorisnikaId")
                        .HasColumnType("int");

                    b.Property<bool>("Verifikovan")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TipKorisnikaId");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("PomoćniProjekatGamingHub.EntityModels.Proizvod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImeProizvoda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NabavnaCijena")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Popust")
                        .HasColumnType("real");

                    b.Property<int>("ProdajnaCijena")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Proizvod");
                });

            modelBuilder.Entity("PomoćniProjekatGamingHub.EntityModels.Recenzija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naslov")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("ID");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Recenzija");
                });

            modelBuilder.Entity("PomoćniProjekatGamingHub.EntityModels.RecenzijaZarn", b =>
                {
                    b.Property<int>("RecenzijaID")
                        .HasColumnType("int");

                    b.Property<int>("ZarnID")
                        .HasColumnType("int");

                    b.HasKey("RecenzijaID", "ZarnID");

                    b.HasIndex("ZarnID");

                    b.ToTable("RecenzijaZarn");
                });

            modelBuilder.Entity("PomoćniProjekatGamingHub.EntityModels.TipKorisnika", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("TipKorisnika");
                });

            modelBuilder.Entity("PomoćniProjekatGamingHub.EntityModels.Zarn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("Zarn");
                });

            modelBuilder.Entity("PomoćniProjekatGamingHub.EntityModels.Igra", b =>
                {
                    b.HasOne("PomoćniProjekatGamingHub.EntityModels.Proizvod", "Proizvod")
                        .WithMany()
                        .HasForeignKey("ProizvodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PomoćniProjekatGamingHub.EntityModels.IgraKonzola", b =>
                {
                    b.HasOne("PomoćniProjekatGamingHub.EntityModels.Igra", "Igra")
                        .WithMany("IgraKonzola")
                        .HasForeignKey("IgraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PomoćniProjekatGamingHub.EntityModels.Konzola", "Konzola")
                        .WithMany("IgraKonzola")
                        .HasForeignKey("KonzolaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PomoćniProjekatGamingHub.EntityModels.IgraZarn", b =>
                {
                    b.HasOne("PomoćniProjekatGamingHub.EntityModels.Igra", "Igra")
                        .WithMany("IgraZarn")
                        .HasForeignKey("IgraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PomoćniProjekatGamingHub.EntityModels.Zarn", "Zarn")
                        .WithMany("IgraZarn")
                        .HasForeignKey("ZarnID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PomoćniProjekatGamingHub.EntityModels.Korisnik", b =>
                {
                    b.HasOne("PomoćniProjekatGamingHub.EntityModels.TipKorisnika", "TipKorisnika")
                        .WithMany()
                        .HasForeignKey("TipKorisnikaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PomoćniProjekatGamingHub.EntityModels.Recenzija", b =>
                {
                    b.HasOne("PomoćniProjekatGamingHub.EntityModels.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PomoćniProjekatGamingHub.EntityModels.RecenzijaZarn", b =>
                {
                    b.HasOne("PomoćniProjekatGamingHub.EntityModels.Recenzija", "Recenzija")
                        .WithMany("RecenzijaZarn")
                        .HasForeignKey("RecenzijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PomoćniProjekatGamingHub.EntityModels.Zarn", "Zarn")
                        .WithMany("RecenzijaZarn")
                        .HasForeignKey("ZarnID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
